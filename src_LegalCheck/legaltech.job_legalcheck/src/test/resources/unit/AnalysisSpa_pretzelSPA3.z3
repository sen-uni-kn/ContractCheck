(declare-const Date_Block1_transfer_due Int)
(declare-const Date_Block1_transfer_event Int)
(declare-const Date_Block2_payment_due Int)
(declare-const Date_Block2_payment_event Int)
(declare-const Date_Block3_withdraw_due Int)
(declare-const Date_Block3_withdraw_event Int)
(declare-const Date_Block3_withdraw_trigger Int)
(declare-const Date_Block4_withdraw_due Int)
(declare-const Date_Block4_withdraw_event Int)
(declare-const Date_Block4_withdraw_trigger Int)
(declare-const Date_Block6_warranty_due Int)
(declare-const Date_Block6_warranty_event Int)
(declare-const Date_Block8_per_due Int)
(declare-const Date_Block8_per_event Int)
(declare-const Date_Block8_per_limit Int)
(declare-const Date_Block8_per_trigger Int)
(declare-const Date_Block9_comp_due Int)
(declare-const Date_Block9_comp_event Int)
(declare-const Date_Block9_comp_limit Int)
(declare-const Date_Block9_comp_trigger Int)
(declare-const Int_Block6_1 Int)
(declare-const Int_Block6_count Int)
(declare-const Int_Block8_3 Int)
(declare-const Int_Block9_5 Int)
(declare-const Person_Block11_owner Int)
(declare-const Person_Block1_purchaser Int)
(declare-const Person_Block1_seller Int)
(declare-const Thing_Block1_shares Int)
(declare-const Thing_Block2_price Int)
(declare-fun owner (Int) Int)
(declare-fun registration (Int) Bool)

(assert (! (= Date_Block3_withdraw_trigger (+ Date_Block1_transfer_due 1)) :named a1_trigger_Block3_withdraw) )
(assert (! (= Date_Block4_withdraw_trigger (+ Date_Block2_payment_due 1)) :named a2_trigger_Block4_withdraw) )
(assert (! (= Date_Block8_per_trigger (+ Date_Block6_warranty_due 1)) :named a3_trigger_Block8_per) )
(assert (! (= Date_Block9_comp_trigger (+ Date_Block6_warranty_due 1)) :named a4_trigger_Block9_comp) )

(assert (! (= Person_Block1_seller 1) :named a5_Block1_seller) )
(assert (! (= Person_Block1_purchaser 2) :named a6_Block1_purchaser) )
(assert (! (= Person_Block11_owner 3) :named a7_Block11_owner) )

(assert (! (= Thing_Block1_shares 1) :named a8_Block1_shares) )
(assert (! (= Thing_Block2_price 2) :named a9_Block2_price) )
(assert (! (= (owner Thing_Block1_shares) Person_Block11_owner) :named a10_Block11_prop) )

(assert (! (= Date_Block1_transfer_due 28) :named a11_due_Block1_transfer) )
(assert (! (= Date_Block3_withdraw_due Date_Block3_withdraw_trigger) :named a12_due_Block3_withdraw) )
(assert (! (= Date_Block2_payment_due 28) :named a13_due_Block2_payment) )
(assert (! (= Date_Block4_withdraw_due Date_Block4_withdraw_trigger) :named a14_due_Block4_withdraw) )
(assert (! (= Date_Block6_warranty_due 28) :named a15_due_Block6_warranty) )
(assert (! (= Date_Block8_per_due (+ Int_Block8_3 28 Date_Block8_per_trigger)) :named a16_due_Block8_per) )
(assert (! (= Date_Block9_comp_due (+ Int_Block9_5 42 Date_Block9_comp_trigger)) :named a17_due_Block9_comp) )

(assert (! (= Date_Block8_per_limit (+ 70)) :named a18_due_Block8_per) )
(assert (! (= Date_Block9_comp_limit (+ 70)) :named a19_due_Block9_comp) )

(assert (! (or (= -1 Date_Block1_transfer_event) (and (<= Date_Block1_transfer_due Date_Block1_transfer_event))) :named a20_Block1_transfer) )
(assert (! (or (not (>= Date_Block1_transfer_event 0)) (= (owner Thing_Block1_shares) Person_Block1_seller)) :named a21_Block1_seller) )
(assert (! (or (= -1 Date_Block3_withdraw_event) (and (< Date_Block3_withdraw_due Date_Block3_withdraw_event))) :named a22_Block3_withdraw) )
(assert (! (or (= -1 Date_Block2_payment_event) (and (<= Date_Block2_payment_due Date_Block2_payment_event))) :named a23_Block2_payment) )
(assert (! (or (not (>= Date_Block2_payment_event 0)) (= (owner Thing_Block2_price) Person_Block1_purchaser)) :named a24_Block1_purchaser) )
(assert (! (or (= -1 Date_Block4_withdraw_event) (and (< Date_Block4_withdraw_due Date_Block4_withdraw_event))) :named a25_Block4_withdraw) )
(assert (! (or (= -1 Date_Block6_warranty_event) (and (<= Date_Block6_warranty_due Date_Block6_warranty_event) (< Date_Block6_warranty_event (+ Int_Block6_1 14)))) :named a26_Block6_warranty) )
(assert (! (= (= Date_Block6_warranty_event -1) (>= Int_Block6_count 10000)) :named a27_Block6_formula3) )
(assert (! (or (= -1 Date_Block8_per_event) (and (< Date_Block8_per_due Date_Block8_per_event) (< Date_Block8_per_event Date_Block8_per_limit))) :named a28_Block8_per) )
(assert (! (or (= -1 Date_Block9_comp_event) (and (< Date_Block9_comp_due Date_Block9_comp_event) (< Date_Block9_comp_event Date_Block9_comp_limit))) :named a29_Block9_comp) )

(assert (! (or (>= Date_Block1_transfer_event 0) (>= Date_Block3_withdraw_event 0)) :named a30_Block1_transfer) )
(assert-soft (>= Date_Block1_transfer_event 0))
(assert-soft (= Date_Block3_withdraw_event -1))
(assert (! (or (>= Date_Block2_payment_event 0) (>= Date_Block4_withdraw_event 0)) :named a31_Block2_payment) )
(assert-soft (>= Date_Block2_payment_event 0))
(assert-soft (= Date_Block4_withdraw_event -1))
(assert (! (or (= Date_Block6_warranty_event -1) (>= Date_Block8_per_event 0) (>= Date_Block9_comp_event 0)) :named a32_Block6_warranty) )
(assert-soft (= Date_Block6_warranty_event -1))
(assert-soft (= Date_Block8_per_event -1))
(assert-soft (= Date_Block9_comp_event -1))

